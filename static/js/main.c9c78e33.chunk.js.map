{"version":3,"sources":["Components/Container/Container.styled.js","Components/Button/Button.styled.js","Components/FormComponents/FormComponents.styled.js","Components/Form/Form.styled.js","Components/Section/Section.styled.js","Components/ContactList/ContactList.styled.js","Components/Filter/Filter.js","Components/NotificationMessage/NotificationMessage.js","App.js","index.js"],"names":["Container","styled","div","Button","button","ImputEnter","input","InputType","label","InputText","p","FormStyled","form","Form","onSubmit","useState","name","setName","number","setNumber","handleChange","evt","target","value","reset","preventDefault","type","pattern","title","placeholder","required","onChange","Section","section","Title","h1","ContactStyledList","ul","ContactItem","li","ContactName","ContactList","contacts","onDeleteItem","map","id","onClick","prototype","PropTypes","func","objectOf","shape","string","Filter","isRequired","NotificationMessage","App","setContacts","filter","setFilter","toastOptions","error","duration","contact","includes","newContact","nanoid","toast","success","length","normalizeFilter","toLocaleLowerCase","toLowerCase","filterChange","itemId","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c9c78e33.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\n\r\nconst Container = styled.div`\r\n  max-width: 1120px;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  padding-left: 15px;\r\n  padding-right: 15px;\r\n`;\r\n\r\nexport { Container };\r\n","import styled from '@emotion/styled';\r\n\r\nconst Button = styled.button`\r\n  padding: 5px 15px;\r\n  width: 110px;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  border: none;\r\n  border-radius: 5px;\r\n  filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));\r\n`;\r\n\r\nexport default Button;\r\n","import styled from '@emotion/styled';\r\n\r\nconst ImputEnter = styled.input`\r\n  width: 220px;\r\n  padding: 5px 15px;\r\n  border-radius: 5px;\r\n  border-color: #d4d4d4;\r\n\r\n  &:hover,\r\n  &:active {\r\n    border-color: #7cb1ec;\r\n  }\r\n`;\r\nconst InputType = styled.label`\r\n  margin-bottom: 10px;\r\n  &:hover,\r\n  &:active {\r\n    border-color: #7cb1ec;\r\n  }\r\n`;\r\n\r\nconst InputText = styled.p`\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nexport { ImputEnter, InputType, InputText };\r\n","import React, { useState } from 'react';\r\nimport styled from '@emotion/styled';\r\n// import PropTepes from 'prop-types';\r\nimport Button from '../Button';\r\nimport { ImputEnter, InputType, InputText } from '../FormComponents';\r\n\r\nconst FormStyled = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  width: 450px;\r\n  padding: 10px 15px;\r\n  border: 1px solid black;\r\n  border-radius: 5px;\r\n`;\r\n\r\nexport default function Form({ onSubmit }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleChange = evt => {\r\n    const { name, value } = evt.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = evt => {\r\n    evt.preventDefault();\r\n\r\n    onSubmit({ name, number });\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <FormStyled onSubmit={handleSubmit}>\r\n      <InputType>\r\n        {' '}\r\n        <InputText>Name</InputText>\r\n        <ImputEnter\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          placeholder=\"Enter your name\"\r\n          required\r\n          value={name}\r\n          onChange={handleChange}\r\n        />\r\n      </InputType>\r\n      <InputType>\r\n        {' '}\r\n        <InputText>Name</InputText>\r\n        <ImputEnter\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n          placeholder=\"Enter your number\"\r\n          value={number}\r\n          onChange={handleChange}\r\n        />\r\n      </InputType>\r\n      <Button type=\"submit\">Add contact</Button>\r\n    </FormStyled>\r\n  );\r\n}\r\n\r\n// class Form extends Component {\r\n//   static propTepes = {\r\n//     onSubmit: PropTepes.func.isRequired,\r\n//   };\r\n\r\n//   state = {\r\n//     name: '',\r\n//     number: '',\r\n//   };\r\n\r\n// handleChange = evt => {\r\n//   const { name, value } = evt.target;\r\n//   this.setState({ [name]: value });\r\n// };\r\n\r\n// handleSubmit = evt => {\r\n//   evt.preventDefault();\r\n\r\n//   this.props.onSubmit(this.state);\r\n//   this.reset();\r\n// };\r\n\r\n// reset = () => {\r\n//   this.setState({ name: '', number: '' });\r\n// };\r\n//   render() {\r\n// return (\r\n//   <FormStyled onSubmit={this.handleSubmit}>\r\n//     <InputType>\r\n//       {' '}\r\n//       <InputText>Name</InputText>\r\n//       <ImputEnter\r\n//         type=\"text\"\r\n//         name=\"name\"\r\n//         pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n//         title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n//         placeholder=\"Enter your name\"\r\n//         required\r\n//         value={this.state.name}\r\n//         onChange={this.handleChange}\r\n//       />\r\n//     </InputType>\r\n//     <InputType>\r\n//       {' '}\r\n//       <InputText>Name</InputText>\r\n//       <ImputEnter\r\n//         type=\"tel\"\r\n//         name=\"number\"\r\n//         pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n//         title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n//         required\r\n//         placeholder=\"Enter your number\"\r\n//         value={this.state.number}\r\n//         onChange={this.handleChange}\r\n//       />\r\n//     </InputType>\r\n//     <Button type=\"submit\">Add contact</Button>\r\n//   </FormStyled>\r\n// );\r\n//   }\r\n// }\r\n\r\n// export default Form;\r\n","import styled from '@emotion/styled';\r\n\r\nconst Section = styled.section`\r\n    margin-top: 25px;\r\n    margin-bottom: 25px;\r\n  text-align:center;\r\n`\r\n\r\nconst Title = styled.h1`\r\n    font-weigth: 400;\r\n    font-size: 20px;\r\n    margin-bottom: 25px;\r\n    text-align:center;\r\n`\r\n\r\nexport {Section,Title}","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport Button from '../Button';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactStyledList = styled.ul`\r\n  width: 450px;\r\n  padding: 15px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-top: 10px;\r\n  border: 1px solid black;\r\n  border-radius: 5px;\r\n`;\r\nconst ContactItem = styled.li`\r\n  color: black;\r\n  &:not(:last-child) {\r\n    margin-bottom: 25px;\r\n  }\r\n`;\r\n\r\nconst ContactName = styled.p`\r\n  color: black;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst ContactList = ({ contacts, onDeleteItem }) => (\r\n  <ContactStyledList>\r\n    {contacts.map(({ name, id, number }) => (\r\n      <ContactItem key={id} id={id}>\r\n        <ContactName>\r\n          {name} : {number}\r\n        </ContactName>\r\n        <Button onClick={() => onDeleteItem(id)} type=\"button\">\r\n          Delete\r\n        </Button>\r\n      </ContactItem>\r\n    ))}\r\n  </ContactStyledList>\r\n);\r\n\r\nContactList.prototype = {\r\n  onDeleteItem: PropTypes.func,\r\n  contacts: PropTypes.objectOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n      id: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport { ImputEnter, InputType, InputText } from '../FormComponents';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ onChange }) => {\r\n  return (\r\n    <InputType onChange={onChange}>\r\n      <InputText>Find contact by name</InputText>\r\n      <ImputEnter />\r\n    </InputType>\r\n  );\r\n};\r\n\r\nFilter.prototype = {\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import styled from '@emotion/styled';\r\n\r\nconst NotificationMessage = styled.div`\r\n  text-align: center;\r\n  color: red;\r\n  margin: 10px;\r\n  font-weight: 600;\r\n  font-size: 22px;\r\n`;\r\n\r\nexport default NotificationMessage;\r\n","import './App.css';\r\nimport React, { useState } from 'react';\r\nimport { Container } from './Components/Container';\r\nimport Form from './Components/Form';\r\nimport { Section, Title } from './Components/Section';\r\nimport ContactList from './Components/ContactList';\r\nimport { nanoid } from 'nanoid';\r\nimport Filter from './Components/Filter';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport NotificationMessage from './Components/NotificationMessage';\r\n\r\nfunction getContact() {\r\n  return [\r\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n  ];\r\n}\r\n\r\nexport default function App() {\r\n  const [contacts, setContacts] = useState(() => getContact());\r\n  const [filter, setFilter] = useState('');\r\n\r\n  const addContact = ({ name, number }) => {\r\n    let array = contacts.map(contact => contact.name);\r\n    if (!array.includes(name)) {\r\n      const newContact = {\r\n        id: nanoid(),\r\n        name: name,\r\n        number: number,\r\n      };\r\n      toast.success('Контакт добавлен');\r\n      return setContacts(contacts => [newContact, ...contacts]);\r\n    } else {\r\n      toast.error('Контакт существует!');\r\n      return;\r\n    }\r\n  };\r\n\r\n  const deleteItem = itemId => {\r\n    setContacts(prevState =>\r\n      prevState.filter(contact => contact.id !== itemId)\r\n    );\r\n  };\r\n\r\n  const filterEnter = evt => {\r\n    setFilter(evt.target.value);\r\n  };\r\n\r\n  const filterChange = () => {\r\n    const normalizeFilter = filter.toLocaleLowerCase();\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizeFilter)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Toaster\r\n        toastOptions={{\r\n          error: {\r\n            duration: 2000,\r\n          },\r\n        }}\r\n      />\r\n      <Section>\r\n        <Title>Phonebook</Title>\r\n        <Form onSubmit={addContact} />\r\n      </Section>\r\n      <Section>\r\n        <Title>Contacts</Title>\r\n        <Filter value={filter} onChange={filterEnter} />\r\n        {contacts.length < 1 ? (\r\n          <NotificationMessage>No Contacts</NotificationMessage>\r\n        ) : (\r\n          <ContactList contacts={filterChange()} onDeleteItem={deleteItem} />\r\n        )}\r\n      </Section>\r\n    </Container>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}