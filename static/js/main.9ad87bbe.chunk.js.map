{"version":3,"sources":["Components/Container/Container.styled.js","Components/Button/Button.styled.js","Components/FormComponents/FormComponents.styled.js","Components/Form/Form.styled.js","Components/Section/Section.styled.js","Components/ContactList/ContactList.styled.js","Components/Filter/Filter.js","App.js","index.js"],"names":["Container","styled","div","Button","button","ImputEnter","input","InputType","label","InputText","p","FormStyled","form","Form","state","name","number","handleChange","evt","target","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","type","pattern","title","placeholder","required","onChange","Component","propTepes","PropTepes","func","isRequired","Section","section","Title","h1","ContactStyledList","ul","ContactItem","li","ContactName","ContactList","contacts","onDeleteItem","map","id","onClick","prototype","PropTypes","objectOf","shape","string","Filter","App","filter","addContact","contact","includes","newContact","nanoid","toast","success","error","deleteItem","itemId","prevState","filterEnter","filterChange","normalizeFilter","toLocaleLowerCase","toastOptions","duration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ad87bbe.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\n\r\nconst Container = styled.div`\r\n  max-width: 1120px;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  padding-left: 15px;\r\n  padding-right: 15px;\r\n`;\r\n\r\nexport { Container };\r\n","import styled from '@emotion/styled';\r\n\r\nconst Button = styled.button`\r\n  padding: 5px 15px;\r\n  width: 110px;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  border: none;\r\n  border-radius: 5px;\r\n  filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));\r\n`;\r\n\r\nexport default Button;\r\n","import styled from '@emotion/styled';\r\n\r\nconst ImputEnter = styled.input`\r\n  width: 220px;\r\n  padding: 5px 15px;\r\n  border-radius: 5px;\r\n  border-color: #d4d4d4;\r\n\r\n  &:hover,\r\n  &:active {\r\n    border-color: #7cb1ec;\r\n  }\r\n`;\r\nconst InputType = styled.label`\r\n  margin-bottom: 10px;\r\n  &:hover,\r\n  &:active {\r\n    border-color: #7cb1ec;\r\n  }\r\n`;\r\n\r\nconst InputText = styled.p`\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nexport { ImputEnter, InputType, InputText };\r\n","import React, { Component } from 'react';\r\nimport styled from '@emotion/styled';\r\nimport PropTepes from 'prop-types';\r\nimport Button from '../Button';\r\nimport { ImputEnter, InputType, InputText } from '../FormComponents';\r\n\r\nconst FormStyled = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  width: 450px;\r\n  padding: 10px 15px;\r\n  border: 1px solid black;\r\n  border-radius: 5px;\r\n`;\r\n\r\nclass Form extends Component {\r\n  static propTepes = {\r\n    onSubmit: PropTepes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = evt => {\r\n    const { name, value } = evt.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = evt => {\r\n    evt.preventDefault();\r\n\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n  render() {\r\n    return (\r\n      <FormStyled onSubmit={this.handleSubmit}>\r\n        <InputType>\r\n          {' '}\r\n          <InputText>Name</InputText>\r\n          <ImputEnter\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            placeholder=\"Enter your name\"\r\n            required\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </InputType>\r\n        <InputType>\r\n          {' '}\r\n          <InputText>Name</InputText>\r\n          <ImputEnter\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n            placeholder=\"Enter your number\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </InputType>\r\n        <Button type=\"submit\">Add contact</Button>\r\n      </FormStyled>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import styled from '@emotion/styled';\r\n\r\nconst Section = styled.section`\r\n    margin-top: 25px;\r\n    margin-bottom: 25px;\r\n  text-align:center;\r\n`\r\n\r\nconst Title = styled.h1`\r\n    font-weigth: 400;\r\n    font-size: 20px;\r\n    margin-bottom: 25px;\r\n    text-align:center;\r\n`\r\n\r\nexport {Section,Title}","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport Button from '../Button';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactStyledList = styled.ul`\r\n  width: 450px;\r\n  padding: 15px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-top: 10px;\r\n  border: 1px solid black;\r\n  border-radius: 5px;\r\n`;\r\nconst ContactItem = styled.li`\r\n  color: black;\r\n  &:not(:last-child) {\r\n    margin-bottom: 25px;\r\n  }\r\n`;\r\n\r\nconst ContactName = styled.p`\r\n  color: black;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst ContactList = ({ contacts, onDeleteItem }) => (\r\n  <ContactStyledList>\r\n    {contacts.map(({ name, id, number }) => (\r\n      <ContactItem key={id} id={id}>\r\n        <ContactName>\r\n          {name} : {number}\r\n        </ContactName>\r\n        <Button onClick={() => onDeleteItem(id)} type=\"button\">\r\n          Delete\r\n        </Button>\r\n      </ContactItem>\r\n    ))}\r\n  </ContactStyledList>\r\n);\r\n\r\nContactList.prototype = {\r\n  onDeleteItem: PropTypes.func,\r\n  contacts: PropTypes.objectOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string,\r\n      number: PropTypes.number,\r\n      id: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport { ImputEnter, InputType, InputText } from '../FormComponents';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ onChange }) => {\r\n  return (\r\n    <InputType onChange={onChange}>\r\n      <InputText>Find contact by name</InputText>\r\n      <ImputEnter />\r\n    </InputType>\r\n  );\r\n};\r\n\r\nFilter.prototype = {\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import './App.css';\r\nimport React, { Component } from 'react';\r\nimport { Container } from './Components/Container';\r\nimport Form from './Components/Form';\r\nimport { Section, Title } from './Components/Section';\r\nimport ContactList from './Components/ContactList';\r\nimport { nanoid } from 'nanoid';\r\nimport Filter from './Components/Filter';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n  };\r\n\r\n  addContact = ({ name, number }) => {\r\n    let array = this.state.contacts.map(contact => contact.name);\r\n    if (!array.includes(name)) {\r\n      const newContact = {\r\n        id: nanoid(),\r\n        name: name,\r\n        number: number,\r\n      };\r\n      toast.success('Контакт добавлен');\r\n      return this.setState(({ contacts }) => ({\r\n        contacts: [newContact, ...contacts],\r\n      }));\r\n    } else {\r\n      toast.error('Контакт существует!');\r\n      return;\r\n    }\r\n  };\r\n\r\n  deleteItem = itemId => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== itemId),\r\n    }));\r\n  };\r\n\r\n  filterEnter = evt => {\r\n    this.setState({ filter: evt.target.value });\r\n  };\r\n\r\n  filterChange = () => {\r\n    const { contacts, filter } = this.state;\r\n    const normalizeFilter = filter.toLocaleLowerCase();\r\n\r\n    return contacts.filter(contact =>\r\n      contact.name.toLocaleLowerCase().includes(normalizeFilter)\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n    return (\r\n      <Container>\r\n        <Toaster\r\n          toastOptions={{\r\n            error: {\r\n              duration: 2000,\r\n            },\r\n          }}\r\n        />\r\n        <Section>\r\n          <Title>Phonebook</Title>\r\n          <Form onSubmit={this.addContact} />\r\n        </Section>\r\n        <Section>\r\n          <Title>Contacts</Title>\r\n          <Filter value={filter} onChange={this.filterEnter} />\r\n          <ContactList\r\n            contacts={this.filterChange()}\r\n            onDeleteItem={this.deleteItem}\r\n          />\r\n        </Section>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}